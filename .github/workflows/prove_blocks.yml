name: Sepolia integration tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: "Install Rust"
        uses: "actions-rs/toolchain@v1"
        with:
          toolchain: "stable"

      - name: "Cache cargo"
        id: cache-cargo
        uses: "actions/cache@v4"
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          save-always: true
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Create and activate Python virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate

      - name: Setup the tests
        run: |
          source venv/bin/activate
          pip install cairo-lang==0.13.2 "sympy<1.13.0"
          bash setup-scripts/setup-tests.sh

      - name: Prove Blocks
        env:
          PATHFINDER_RPC_URL: ${{ secrets.PATHFINDER_RPC_URL }}
        run: |
          cargo test --release --package prove_block --test prove_block -- test_prove_selected_blocks --show-output --ignored

      - name: Class hashes
        env:
          PATHFINDER_RPC_URL: ${{ secrets.PATHFINDER_RPC_URL }}
        run: |
          cargo test --release --package prove_block --test hash_tests -- test_recompute_class_hash test_class_proof_verification_ok test_class_proof_verification_non_inclusion --show-output --ignored

      - name: Hint tool Orphans
        env:
          PATHFINDER_RPC_URL: ${{ secrets.PATHFINDER_RPC_URL }}
        run: |
          RESULT=$(cargo run --release -p hint_tool -- --subset orphaned --in-file build/os_latest.json | grep -oP '\d+$')
          if [ "$RESULT" -gt 1 ]; then
            echo "Error: Only breakpoint hint is allowed to be orphaned."
            exit 1
          fi
